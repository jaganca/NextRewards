/**
 * NextConfig
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.nextresources.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * CustomFieldFetchParams
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-28T02:31:31.507+05:30")
public class CustomFieldFetchParams   {
  @SerializedName("entityNames")
  private List<String> entityNames = new ArrayList<String>();

  @SerializedName("branchId")
  private Long branchId = null;

  @SerializedName("searchString")
  private String searchString = null;

  @SerializedName("fetch")
  private List<String> fetch = new ArrayList<String>();

  @SerializedName("formName")
  private String formName = null;

  @SerializedName("entityInstanceIds")
  private List<Long> entityInstanceIds = new ArrayList<Long>();

  @SerializedName("customFieldIds")
  private List<Long> customFieldIds = new ArrayList<Long>();

  @SerializedName("mandatory")
  private Boolean mandatory = false;

  @SerializedName("mandatoryFetch")
  private Boolean mandatoryFetch = false;

  public CustomFieldFetchParams entityNames(List<String> entityNames) {
    this.entityNames = entityNames;
    return this;
  }

  public CustomFieldFetchParams addEntityNamesItem(String entityNamesItem) {
    this.entityNames.add(entityNamesItem);
    return this;
  }

   /**
   * Get entityNames
   * @return entityNames
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getEntityNames() {
    return entityNames;
  }

  public void setEntityNames(List<String> entityNames) {
    this.entityNames = entityNames;
  }

  public CustomFieldFetchParams branchId(Long branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getBranchId() {
    return branchId;
  }

  public void setBranchId(Long branchId) {
    this.branchId = branchId;
  }

  public CustomFieldFetchParams searchString(String searchString) {
    this.searchString = searchString;
    return this;
  }

   /**
   * Get searchString
   * @return searchString
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSearchString() {
    return searchString;
  }

  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }

  public CustomFieldFetchParams fetch(List<String> fetch) {
    this.fetch = fetch;
    return this;
  }

  public CustomFieldFetchParams addFetchItem(String fetchItem) {
    this.fetch.add(fetchItem);
    return this;
  }

   /**
   * Get fetch
   * @return fetch
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getFetch() {
    return fetch;
  }

  public void setFetch(List<String> fetch) {
    this.fetch = fetch;
  }

  public CustomFieldFetchParams formName(String formName) {
    this.formName = formName;
    return this;
  }

   /**
   * Get formName
   * @return formName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFormName() {
    return formName;
  }

  public void setFormName(String formName) {
    this.formName = formName;
  }

  public CustomFieldFetchParams entityInstanceIds(List<Long> entityInstanceIds) {
    this.entityInstanceIds = entityInstanceIds;
    return this;
  }

  public CustomFieldFetchParams addEntityInstanceIdsItem(Long entityInstanceIdsItem) {
    this.entityInstanceIds.add(entityInstanceIdsItem);
    return this;
  }

   /**
   * Get entityInstanceIds
   * @return entityInstanceIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Long> getEntityInstanceIds() {
    return entityInstanceIds;
  }

  public void setEntityInstanceIds(List<Long> entityInstanceIds) {
    this.entityInstanceIds = entityInstanceIds;
  }

  public CustomFieldFetchParams customFieldIds(List<Long> customFieldIds) {
    this.customFieldIds = customFieldIds;
    return this;
  }

  public CustomFieldFetchParams addCustomFieldIdsItem(Long customFieldIdsItem) {
    this.customFieldIds.add(customFieldIdsItem);
    return this;
  }

   /**
   * Get customFieldIds
   * @return customFieldIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Long> getCustomFieldIds() {
    return customFieldIds;
  }

  public void setCustomFieldIds(List<Long> customFieldIds) {
    this.customFieldIds = customFieldIds;
  }

  public CustomFieldFetchParams mandatory(Boolean mandatory) {
    this.mandatory = mandatory;
    return this;
  }

   /**
   * Get mandatory
   * @return mandatory
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getMandatory() {
    return mandatory;
  }

  public void setMandatory(Boolean mandatory) {
    this.mandatory = mandatory;
  }

  public CustomFieldFetchParams mandatoryFetch(Boolean mandatoryFetch) {
    this.mandatoryFetch = mandatoryFetch;
    return this;
  }

   /**
   * Get mandatoryFetch
   * @return mandatoryFetch
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getMandatoryFetch() {
    return mandatoryFetch;
  }

  public void setMandatoryFetch(Boolean mandatoryFetch) {
    this.mandatoryFetch = mandatoryFetch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldFetchParams customFieldFetchParams = (CustomFieldFetchParams) o;
    return Objects.equals(this.entityNames, customFieldFetchParams.entityNames) &&
        Objects.equals(this.branchId, customFieldFetchParams.branchId) &&
        Objects.equals(this.searchString, customFieldFetchParams.searchString) &&
        Objects.equals(this.fetch, customFieldFetchParams.fetch) &&
        Objects.equals(this.formName, customFieldFetchParams.formName) &&
        Objects.equals(this.entityInstanceIds, customFieldFetchParams.entityInstanceIds) &&
        Objects.equals(this.customFieldIds, customFieldFetchParams.customFieldIds) &&
        Objects.equals(this.mandatory, customFieldFetchParams.mandatory) &&
        Objects.equals(this.mandatoryFetch, customFieldFetchParams.mandatoryFetch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityNames, branchId, searchString, fetch, formName, entityInstanceIds, customFieldIds, mandatory, mandatoryFetch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldFetchParams {\n");
    
    sb.append("    entityNames: ").append(toIndentedString(entityNames)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    fetch: ").append(toIndentedString(fetch)).append("\n");
    sb.append("    formName: ").append(toIndentedString(formName)).append("\n");
    sb.append("    entityInstanceIds: ").append(toIndentedString(entityInstanceIds)).append("\n");
    sb.append("    customFieldIds: ").append(toIndentedString(customFieldIds)).append("\n");
    sb.append("    mandatory: ").append(toIndentedString(mandatory)).append("\n");
    sb.append("    mandatoryFetch: ").append(toIndentedString(mandatoryFetch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

